- name: get docker and docker-compose info
  hosts: test_server
  tasks:
    - name: check if docker is installed
      command: docker --version docker-compose --version
      register: docker_version
    - debug: msg={{docker_version.stdout_lines[0]}}

    - name: check if docker-compose is installed
      command: docker-compose --version
      register: docker_compose_version
    - debug: msg={{docker_compose_version.stdout_lines[0]}}

- name: Run services
  hosts: test_server
  vars_files: vars/test.yaml
  tasks:
    - name: run services
      community.docker.docker_compose:
        project_name: "{{project_name}}"
        definition:
          services:
            nginx:
              image: nginx:{{nginx_version}}
              ports:
                - "{{app_port}}:80"
              volumes:
                - "{{nginx_conf_dir}}:/etc/nginx/conf.d/"
                - "{{app_dir}}:/app"
              networks:
                - ycanNet
              restart: always
              depends_on:
                - php
            php:
              image: php:7-fpm
              networks:
                - ycanNet
              restart: always
              volumes:
                - "{{app_dir}}:/app"
          networks:
            ycanNet:

    - name: check is containers running
      command: docker ps
      register: running_containers
    - debug: msg={{running_containers.stdout_lines}}

- name: Checking is the websites
  hosts: test_server
  vars_files: vars/test.yaml
  tasks:
    - name: check website test1.testycan.shop is running
      command: "curl --header 'Host: test1.testycan.shop' localhost:{{app_port}}"
      register: curl_result
    - debug: msg={{curl_result.stdout_lines}}

    - name: check website test2.testycan.shop is running
      command: "curl --header 'Host: test2.testycan.shop' localhost:{{app_port}}"
      register: curl_result
    - debug: msg={{curl_result.stdout_lines}}

    - name: check website test3.testycan.shop is running
      command: "curl --header 'Host: test3.testycan.shop' localhost:{{app_port}}"
      register: curl_result
    - debug: msg={{curl_result.stdout_lines}}
